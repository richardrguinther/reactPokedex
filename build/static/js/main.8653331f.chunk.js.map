{"version":3,"sources":["Components/Header.js","Components/Main.js","Components/Loading.js","Components/Pokemon.js","App.js","index.js"],"names":["Header","id","href","Main","pokemons","children","Loading","React","useState","loadingText","setLoadingText","useEffect","loadingInterval","window","setInterval","clearInterval","Pokemon","name","pokemon","type","types","className","src","sprites","front_default","alt","charAt","toUpperCase","String","prototype","slice","call","abilities","map","ab","ability","App","Array","fill","setPokemons","loading","setLoading","getPokemonInfo","promises","a","Promise","allSettled","then","response","filter","toFilter","status","fetchedPromises","pokemonPromise","value","_","index","fetch","getPokemonURL","json","pokemonArray","console","log","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAYeA,EAVA,WACb,OACE,iCACE,oBAAIC,GAAG,OAAP,SACE,mBAAGC,KAAK,IAAR,0BCGOC,G,MARF,SAAC,GAA2B,EAAzBC,SAA0B,IAAhBC,EAAe,EAAfA,SACxB,OACE,+BACGA,MCmBQC,EArBC,WAAO,IAAD,EACgBC,IAAMC,SAAS,WAD/B,mBACfC,EADe,KACFC,EADE,KAkBpB,OAfAH,IAAMI,WAAU,WACd,IAAIC,EAAkBC,OAAOC,aAAY,WACnB,eAAhBL,EACFC,EAAgBD,GAAe,MAE/BI,OAAOE,cAAcH,GACrBF,EAAe,cAEhB,KAEH,OAAO,WACLG,OAAOE,cAAcH,MAEtB,CAACH,IAEG,oBAAIR,GAAG,iBAAP,SAAyBQ,KCWnBO,EA7BC,SAAC,GAAiB,IAIRC,EAJPC,EAAc,EAAdA,QAETC,EAASD,EAAQE,MAAM,GAAvBD,KAQR,OACE,sBAAKE,UAAS,eAAUF,EAAKF,MAA7B,UACE,qBACEI,UAAU,aACVC,IAAKJ,EAAQK,QAAQC,cACrBC,IAAKP,EAAQD,OAEf,mBAAGI,UAAU,aAAb,SAA2BH,EAAQD,OACnC,oBAAGI,UAAU,gBAAb,oBAdoBJ,EAc+BE,EAAKF,KAbpD,GAAN,OACEA,EAAKS,OAAO,GAAGC,cAAgBC,OAAOC,UAAUC,MAAMC,KAAKd,EAAM,QAajE,qBAAII,UAAU,YAAd,UACE,4CACCH,EAAQc,UAAUC,KAAI,SAACC,GACtB,OAAO,oBAAIb,UAAU,gBAAd,SAA+Ba,EAAGC,QAAQlB,iBC+B5CmB,MAjDf,WAAgB,IAAD,EACmB7B,IAAMC,SAAS6B,MAAM,KAAKC,QAD7C,mBACNlC,EADM,KACImC,EADJ,OAEiBhC,IAAMC,UAAS,GAFhC,mBAENgC,EAFM,KAEGC,EAFH,KAQPC,EAAc,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACRC,QAAQC,WAAWH,GAC7BI,MAAK,SAACC,GAAD,OACJA,EAASC,QAAO,SAACC,GAAD,MAAkC,cAApBA,EAASC,aAExCJ,MAAK,SAACK,GAAD,OACJA,EAAgBnB,KAAI,SAACoB,GAAD,OAAoBA,EAAeC,YANtC,mFAAH,sDAyBpB,OAfA/C,IAAMI,WAAU,WAQd+B,EANiBtC,EAAS6B,KAAI,SAACsB,EAAGC,GAC9B,OAfJC,MAHoB,SAACxD,GAAD,kDAA6CA,GAG3DyD,CAemBF,EAAQ,IAfRT,MAAK,SAACC,GAAD,OAAcA,EAASW,cAoBvBZ,MAAK,SAACa,GAClCC,QAAQC,IAAIF,EAAa,IACzBrB,EAAYqB,GACZnB,GAAW,QAEZ,IAGD,mCACE,sBAAKpB,UAAU,UAAf,UACE,cAAC,EAAD,IACA,eAAC,EAAD,WACGmB,GAAW,cAAC,EAAD,SACKuB,IAAhB3D,EAAS,IACRA,EAAS6B,KAAI,SAACf,GAAD,OACX,cAAC,EAAD,CAASA,QAASA,GAAcA,EAAQjB,gBC1CtD+D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8653331f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1 id=\"logo\">\r\n        <a href=\"/\">Pokedex</a>\r\n      </h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Main = ({ pokemons, children }) => {\r\n  return (\r\n    <main>\r\n      {children}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  let [loadingText, setLoadingText] = React.useState(\"Loading\");\r\n\r\n  React.useEffect(() => {\r\n    let loadingInterval = window.setInterval(() => {\r\n      if (loadingText !== \"Loading...\") {\r\n        setLoadingText((loadingText += \".\"));\r\n      } else {\r\n        window.clearInterval(loadingInterval);\r\n        setLoadingText(\"Loading\");\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      window.clearInterval(loadingInterval);\r\n    };\r\n  }, [loadingText]);\r\n\r\n  return <h1 id=\"loading-screen\">{loadingText}</h1>;\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nconst Pokemon = ({ pokemon }) => {\r\n  // let {type} = pokemon.types[0].type.name;\r\n  const { type } = pokemon.types[0];\r\n\r\n  const capitalizeName = (name) => {\r\n    return `${\r\n      name.charAt(0).toUpperCase() + String.prototype.slice.call(name, 1)\r\n    }`;\r\n  };\r\n\r\n  return (\r\n    <div className={`card ${type.name}`}>\r\n      <img\r\n        className=\"card-image\"\r\n        src={pokemon.sprites.front_default}\r\n        alt={pokemon.name}\r\n      />\r\n      <p className=\"card-title\">{pokemon.name}</p>\r\n      <p className=\"card-subtitle\">Type: {capitalizeName(type.name)}</p>\r\n      <ul className=\"abilities\">\r\n        <li>Abilities:</li>\r\n        {pokemon.abilities.map((ab) => {\r\n          return <li className=\"card-subtitle\">{ab.ability.name}</li>;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import Header from \"./Components/Header\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Main from \"./Components/Main\";\nimport Loading from \"./Components/Loading\";\nimport Pokemon from \"./Components/Pokemon\";\nfunction App() {\n  const [pokemons, setPokemons] = React.useState(Array(150).fill());\n  const [loading, setLoading] = React.useState(true);\n  const getPokemonURL = (id) => `https://pokeapi.co/api/v2/pokemon/${id}`;\n\n  const fetchPokemons = (id) =>\n    fetch(getPokemonURL(id)).then((response) => response.json());\n\n  const getPokemonInfo = async (promises) => {\n    return await Promise.allSettled(promises)\n      .then((response) =>\n        response.filter((toFilter) => toFilter.status === \"fulfilled\")\n      )\n      .then((fetchedPromises) =>\n        fetchedPromises.map((pokemonPromise) => pokemonPromise.value)\n      );\n  };\n\n  React.useEffect(() => {\n    const getPromises = () => {\n      let promises = pokemons.map((_, index) => {\n        return fetchPokemons(index + 1);\n      });\n      return promises;\n    };\n\n    getPokemonInfo(getPromises()).then((pokemonArray) => {\n      console.log(pokemonArray[0]);\n      setPokemons(pokemonArray);\n      setLoading(false);\n    });\n  }, []); // We set an empty array of dependecies, so the code run only when the application is started\n\n  return (\n    <>\n      <div className=\"Pokedex\">\n        <Header />\n        <Main>\n          {loading && <Loading />}\n          {pokemons[0] !== undefined &&\n            pokemons.map((pokemon) => (\n              <Pokemon pokemon={pokemon} key={pokemon.id} />\n            ))}\n        </Main>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}